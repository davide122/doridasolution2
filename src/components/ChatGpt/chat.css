.chat-container {
    display: flex;
    flex-direction: column;
    max-width: 600px;
    margin: auto;
    border: 1px solid #ccc;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .chat-header {
    background-color: #f5f5f5;
    padding: 10px;
    text-align: right;
  }
  .info-button {
    border: none;
    background: none;
    cursor: pointer;
    font-size: 24px;
  }
  
  .chat-messages {
    padding: 20px;
    height: 400px;
    overflow-y: auto;
  }
  
  .message {
    margin-bottom: 20px;
    padding: 10px;
    border-radius: 8px;
  }
  
  .message.user {
    background-color: #e0ffe0;
    align-self: flex-end;
  }
  
  .message.chat {
    background-color: #e0e0ff;
    align-self: flex-start;
  }
  
  .error-message {
    color: red;
    padding: 10px;
  }
  
  .Chat
 {
    
   position: relative;
  }
  .Chat p {
    font-size: 12px;
    color: rgba(255, 255, 255, 0.627);
  }

  .Nuvoletta {
    position: absolute;
    animation: scale-animation 1s infinite ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: #fff; /* Colore del testo */
    z-index: 0;
  opacity: 0.8;
  transform-origin: center; /* Imposta il centro del rombo come punto di rotazione */
  }
  
  @keyframes scale-animation {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
    }
    50% {
      transform: translate(-50%, -50%) scale(1.3);
    }
  }

  


  .Call-Button {
    position: relative;
    border: none;
    outline: none;
    cursor: pointer;
    background-color: transparent;
    padding: 15px;
    font-size: 17px;

  }
  

  @keyframes gradient-rotation {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .Call-Button::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 50%;
    background: linear-gradient(45deg, #ff0000, #00ff00, #0000ff);
    z-index: -1;
    animation: gradient-rotation 1s linear infinite;
    display: none; /* Nasconde l'effetto per default */
  }
  .Call-Button.is-loading::before {
    display: block; /* Mostra l'effetto quando `is-loading` Ã¨ presente */
  }